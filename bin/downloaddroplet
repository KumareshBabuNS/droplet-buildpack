#!/usr/bin/env bash
# bin/detect <cf-app-name> <org-manifest.yml>

cf_app_name=$1
org_manifest=$2

rm -rf *

cf ssh $1 -c "cat app/app.tar | base64" | base64 -D > app.tar
cf ssh $1 -c "cat app/mkdirs.sh | base64" | base64 -D > mkdirs.sh
cf ssh $1 -c "cat app/release.yml | base64" | base64 -D > release.yml

echo Extracting application
mkdir app
cd app
tar xf ../app.tar *
cd ..
#rm app.tar

echo Moving mkdirs.sh to application
mv mkdirs.sh app

echo Constructing manifest.yml
cp $2 .
cat manifest.yml | grep -v "    deploybuildpack:" > tmp.yml && mv tmp.yml manifest.yml
cat manifest.yml | grep -v "  buildpack:" > tmp.yml && mv tmp.yml manifest.yml
cat manifest.yml | grep -v "  path:" > tmp.yml && mv tmp.yml manifest.yml
echo "  path: app" >> manifest.yml
echo "  buildpack: binary_buildpack" >> manifest.yml

lines_not_matching_env=`cat manifest.yml | grep -A1 "env:" | tail -1 | grep -v "^    .*" | wc -l`
if [ $lines_not_matching_env -eq 1  ]  
  then  
  echo Environment yaml section not set, remove declaration
  cat manifest.yml | grep -v "  env:" > tmp.yml && mv tmp.yml manifest.yml
fi

procfilevariable="`cat release.yml | tail -1 | cut -f1 -d":" | xargs`: sh startbinary.sh"
echo $procfilevariable > ./app/Procfile

echo "./mkdirs.sh" > ./app/startbinary.sh
cat release.yml | tail -1 | cut -f2 -d":" | xargs >> ./app/startbinary.sh

chmod 755 app/*.sh

#rm release.yml
