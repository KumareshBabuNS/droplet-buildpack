#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e            # fail fast
set -o pipefail   # do not ignore exit codes when piping output

# Configure directories
build_dir=$1
cache_dir=$2
compile_buildpack_dir=$(cd $(dirname $0); cd ..; pwd)
org_execution_dir=`pwd`

echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo Build dir:                     $build_dir
echo Cache dir:                     $cache_dir
echo Compile buildpack dir:         $compile_buildpack_dir
echo Original script execution dir: $org_execution_dir
#echo printenv
#printenv
#echo pwd
#pwd
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo 1 - XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo Cloning buildpack from $deploy-buildpack
mkdir buildpack
cd buildpack
git clone --recursive $deploybuildpack
mv $(basename $deploybuildpack) buildpack
cd buildpack
pwd
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo 2 - XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo About to run $(basename $deploybuildpack)
./bin/compile $1 $2
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo 3 -  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
cd $1
pwd
tar czf app.tar.gz .
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo 4 - XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
cd $org_execution_dir
pwd
./buildpack/buildpack/bin/release $1 > $1/release.yml
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo 5 - XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
cd $build_dir
pwd
find . -type d | sed -e 's/^/mkdir -p "/' | sed -e 's/$/"/' > mkdirs.sh
echo All done!!!!!
#echo Additional debugging!!!!!
#find .
#echo Look at webapp root directory
#cd .java-buildpack/tomcat/webapps/ROOT
#ls -l
